// <auto-generated />
using System;
using CatLib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CatLib.Migrations
{
    [DbContext(typeof(CatLibContext))]
    [Migration("20230301212706_new-colum-for-desc")]
    partial class newcolumfordesc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CatGeneratorNameCatGeneratorType", b =>
                {
                    b.Property<int>("CatGeneratorNamesId")
                        .HasColumnType("int");

                    b.Property<int>("CatGeneratorTypesId")
                        .HasColumnType("int");

                    b.HasKey("CatGeneratorNamesId", "CatGeneratorTypesId");

                    b.HasIndex("CatGeneratorTypesId");

                    b.ToTable("CatGeneratorNameCatGeneratorType");
                });

            modelBuilder.Entity("CatGeneratorNamePersonality", b =>
                {
                    b.Property<int>("CatGeneratorNamesId")
                        .HasColumnType("int");

                    b.Property<int>("PersonalitiesId")
                        .HasColumnType("int");

                    b.HasKey("CatGeneratorNamesId", "PersonalitiesId");

                    b.HasIndex("PersonalitiesId");

                    b.ToTable("CatGeneratorNamePersonality");
                });

            modelBuilder.Entity("CatLib.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("CatLib.Models.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Affection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hypoallergenic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intelligence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Playfulness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shedding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Health.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Causes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Living_Management")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Names")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prevention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Short_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Health.Disease_Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiseaseId");

                    b.ToTable("Disease_Questions");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Wariors_Generator.WariorColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WariorColorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("WariorColores");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Wariors_Generator.WariorPrefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WariorColorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WariorColorId");

                    b.ToTable("WariorPrefixes");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Wariors_Generator.WariorSuffix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WariorSuffixes");
                });

            modelBuilder.Entity("CatLib.Models.CompatibilityDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Friendliness_To_Cat_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Childern_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Dog_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Old_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grooming_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vocality_Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatId")
                        .IsUnique();

                    b.ToTable("CompatibilityDescription");
                });

            modelBuilder.Entity("CatLib.Models.MainSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Colors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Life_Expectancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Litter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatId")
                        .IsUnique();

                    b.ToTable("MainSpecifications");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.CatGeneratorName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("HairId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("GenderId");

                    b.HasIndex("HairId");

                    b.ToTable("CatGeneratorNames");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.CatGeneratorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatGeneratorTypes");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.CategoryName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryNames");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Hair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hair");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Personality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryNameId")
                        .HasColumnType("int");

                    b.Property<string>("Desctiption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCharacter")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryNameId");

                    b.ToTable("Personality");
                });

            modelBuilder.Entity("CatLib.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("CatLib.Models.OtherSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Care_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Characteristics_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choosing_Kitten_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Cat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Childern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Dog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friendliness_To_Old")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grooming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grooming_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kitty_Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Live_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nicknames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Names")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Persinality_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Short_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vocality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatId")
                        .IsUnique();

                    b.ToTable("OtherSpecifications");
                });

            modelBuilder.Entity("CatLib.Models.PhysicalSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Coat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ears")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eyes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Head")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatId")
                        .IsUnique();

                    b.ToTable("PhysicalSpecifications");
                });

            modelBuilder.Entity("CatLib.Models.Product_Reviews.ProductArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductArticles");
                });

            modelBuilder.Entity("CatLib.Models.Product_Reviews.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Pros")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductArticleId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("CatLib.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Allergenic")
                        .HasColumnType("bit");

                    b.Property<bool>("Appropriate")
                        .HasColumnType("bit");

                    b.Property<string>("Good_for_Cats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_Much_to_Feed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_Much_to_Feed_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_Offen_to_Feed_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_Often_to_Feed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nutrition_Stats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nutritional_Benefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Risks_for_Cats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Toxic")
                        .HasColumnType("bit");

                    b.Property<string>("Used_in_Commercial_Food")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CatLib.Models.Products.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("CatLib.Models.Products.ProductQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductQuestions");
                });

            modelBuilder.Entity("CatLib.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CatLib.Models.TemperamentDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Affection_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Intelligence_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Playfulness_Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatId")
                        .IsUnique();

                    b.ToTable("TemperamentDescriptions");
                });

            modelBuilder.Entity("CatLib.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CatGeneratorNameCatGeneratorType", b =>
                {
                    b.HasOne("CatLib.Models.NameGenerator.CatGeneratorName", null)
                        .WithMany()
                        .HasForeignKey("CatGeneratorNamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatLib.Models.NameGenerator.CatGeneratorType", null)
                        .WithMany()
                        .HasForeignKey("CatGeneratorTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatGeneratorNamePersonality", b =>
                {
                    b.HasOne("CatLib.Models.NameGenerator.CatGeneratorName", null)
                        .WithMany()
                        .HasForeignKey("CatGeneratorNamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatLib.Models.NameGenerator.Personality", null)
                        .WithMany()
                        .HasForeignKey("PersonalitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatLib.Models.Answer", b =>
                {
                    b.HasOne("CatLib.Models.Cat", "Cat")
                        .WithMany("Answers")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatLib.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Health.Disease_Question", b =>
                {
                    b.HasOne("CatLib.Models.Cat_Health.Disease", "Disease")
                        .WithMany("Disease_Questions")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disease");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Wariors_Generator.WariorColor", b =>
                {
                    b.HasOne("CatLib.Models.Cat_Wariors_Generator.WariorColor", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Wariors_Generator.WariorPrefix", b =>
                {
                    b.HasOne("CatLib.Models.Cat_Wariors_Generator.WariorColor", null)
                        .WithMany("WariorPrefix")
                        .HasForeignKey("WariorColorId");
                });

            modelBuilder.Entity("CatLib.Models.CompatibilityDescription", b =>
                {
                    b.HasOne("CatLib.Models.Cat", "Cat")
                        .WithOne("CompatibilityDescription")
                        .HasForeignKey("CatLib.Models.CompatibilityDescription", "CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatLib.Models.MainSpecification", b =>
                {
                    b.HasOne("CatLib.Models.Cat", "Cat")
                        .WithOne("MainSpecification")
                        .HasForeignKey("CatLib.Models.MainSpecification", "CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.CatGeneratorName", b =>
                {
                    b.HasOne("CatLib.Models.NameGenerator.Color", "Color")
                        .WithMany("CatGeneratorNames")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatLib.Models.NameGenerator.Gender", "Gender")
                        .WithMany("CatGeneratorNames")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatLib.Models.NameGenerator.Hair", "Hair")
                        .WithMany("CatGeneratorNames")
                        .HasForeignKey("HairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Gender");

                    b.Navigation("Hair");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Personality", b =>
                {
                    b.HasOne("CatLib.Models.NameGenerator.CategoryName", "CategoryName")
                        .WithMany("Personalities")
                        .HasForeignKey("CategoryNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryName");
                });

            modelBuilder.Entity("CatLib.Models.OtherSpecification", b =>
                {
                    b.HasOne("CatLib.Models.Cat", "Cat")
                        .WithOne("OtherSpecification")
                        .HasForeignKey("CatLib.Models.OtherSpecification", "CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatLib.Models.PhysicalSpecification", b =>
                {
                    b.HasOne("CatLib.Models.Cat", "Cat")
                        .WithOne("PhysicalSpecification")
                        .HasForeignKey("CatLib.Models.PhysicalSpecification", "CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatLib.Models.Product_Reviews.ProductReview", b =>
                {
                    b.HasOne("CatLib.Models.Product_Reviews.ProductArticle", "ProductArticle")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductArticleId");

                    b.Navigation("ProductArticle");
                });

            modelBuilder.Entity("CatLib.Models.Products.Product", b =>
                {
                    b.HasOne("CatLib.Models.Products.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("CatLib.Models.Products.ProductQuestion", b =>
                {
                    b.HasOne("CatLib.Models.Products.Product", "Product")
                        .WithMany("ProductQuestions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CatLib.Models.TemperamentDescription", b =>
                {
                    b.HasOne("CatLib.Models.Cat", "Cat")
                        .WithOne("TemperamentDescription")
                        .HasForeignKey("CatLib.Models.TemperamentDescription", "CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatLib.Models.Cat", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("CompatibilityDescription");

                    b.Navigation("MainSpecification");

                    b.Navigation("OtherSpecification");

                    b.Navigation("PhysicalSpecification");

                    b.Navigation("TemperamentDescription");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Health.Disease", b =>
                {
                    b.Navigation("Disease_Questions");
                });

            modelBuilder.Entity("CatLib.Models.Cat_Wariors_Generator.WariorColor", b =>
                {
                    b.Navigation("WariorPrefix");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.CategoryName", b =>
                {
                    b.Navigation("Personalities");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Color", b =>
                {
                    b.Navigation("CatGeneratorNames");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Gender", b =>
                {
                    b.Navigation("CatGeneratorNames");
                });

            modelBuilder.Entity("CatLib.Models.NameGenerator.Hair", b =>
                {
                    b.Navigation("CatGeneratorNames");
                });

            modelBuilder.Entity("CatLib.Models.Product_Reviews.ProductArticle", b =>
                {
                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("CatLib.Models.Products.Product", b =>
                {
                    b.Navigation("ProductQuestions");
                });

            modelBuilder.Entity("CatLib.Models.Products.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CatLib.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
